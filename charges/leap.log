log started: Mon Mar 14 10:03:20 2022

Log file: ./leap.log
>> #
>> # ----- leaprc for loading the general Amber Force field.
>> #       This file is mostly for use with Antechamber
>> #
>> #	load atom type hybridizations
>> #
>> addAtomTypes {
>> 	{ "h1"  "H" "sp3" }
>> 	{ "h2"  "H" "sp3" }
>> 	{ "h3"  "H" "sp3" }
>> 	{ "h4"  "H" "sp3" }
>> 	{ "h5"  "H" "sp3" }
>> 	{ "ha"  "H" "sp3" }
>> 	{ "hc"  "H" "sp3" }
>> 	{ "hn"  "H" "sp3" }
>> 	{ "ho"  "H" "sp3" }
>> 	{ "hp"  "H" "sp3" }
>> 	{ "hs"  "H" "sp3" }
>> 	{ "hw"  "H" "sp3" }
>> 	{ "hx"  "H" "sp3" }
>> 	{ "o"  "O" "sp2" }
>> 	{ "o2"  "O" "sp2" }
>> 	{ "oh"  "O" "sp3" }
>> 	{ "op"  "O" "sp3" }
>> 	{ "oq"  "O" "sp3" }
>> 	{ "os"  "O" "sp3" }
>> 	{ "ow"  "O" "sp3" }
>> 	{ "c"  "C" "sp2" }
>> 	{ "c1"  "C" "sp2" }
>> 	{ "c2"  "C" "sp2" }
>> 	{ "c3"  "C" "sp3" }
>> 	{ "ca"  "C" "sp2" }
>> 	{ "cc"  "C" "sp2" }
>> 	{ "cd"  "C" "sp2" }
>> 	{ "ce"  "C" "sp2" }
>> 	{ "cf"  "C" "sp2" }
>> 	{ "cg"  "C" "sp2" }
>> 	{ "ch"  "C" "sp2" }
>> 	{ "cp"  "C" "sp2" }
>> 	{ "cq"  "C" "sp2" }
>> 	{ "cu"  "C" "sp2" }
>> 	{ "cv"  "C" "sp2" }
>> 	{ "cx"  "C" "sp2" }
>> 	{ "cy"  "C" "sp2" }
>> 	{ "cz"  "C" "sp2" }
>> 	{ "n"   "N" "sp2" }
>> 	{ "n1"  "N" "sp2" }
>> 	{ "n2"  "N" "sp2" }
>> 	{ "n3"  "N" "sp3" }
>> 	{ "n4"  "N" "sp3" }
>> 	{ "na"  "N" "sp2" }
>> 	{ "nb"  "N" "sp2" }
>> 	{ "nc"  "N" "sp2" }
>> 	{ "nd"  "N" "sp2" }
>> 	{ "ne"  "N" "sp2" }
>> 	{ "nf"  "N" "sp2" }
>> 	{ "nh"  "N" "sp2" }
>> 	{ "ni"  "N" "sp2" }
>> 	{ "nj"  "N" "sp2" }
>> 	{ "nk"  "N" "sp3" }
>> 	{ "nl"  "N" "sp3" }
>> 	{ "nm"  "N" "sp2" }
>> 	{ "nn"  "N" "sp2" }
>> 	{ "no"  "N" "sp2" }
>> 	{ "np"  "N" "sp3" }
>> 	{ "nq"  "N" "sp3" }
>> 	{ "s"   "S" "sp2" }
>> 	{ "s2"   "S" "sp2" }
>> 	{ "s3"   "S" "sp3" }
>> 	{ "s4"   "S" "sp3" }
>> 	{ "s6"   "S" "sp3" }
>> 	{ "sh"   "S" "sp3" }
>> 	{ "sp"   "S" "sp3" }
>> 	{ "sq"   "S" "sp3" }
>> 	{ "ss"   "S" "sp3" }
>> 	{ "sx"   "S" "sp3" }
>> 	{ "sy"   "S" "sp3" }
>> 	{ "p2"   "P" "sp2" }
>> 	{ "p3"   "P" "sp3" }
>> 	{ "p4"   "P" "sp3" }
>> 	{ "p5"   "P" "sp3" }
>> 	{ "pb"   "P" "sp3" }
>> 	{ "pc"   "P" "sp3" }
>> 	{ "pd"   "P" "sp3" }
>> 	{ "pe"   "P" "sp3" }
>> 	{ "pf"   "P" "sp3" }
>> 	{ "px"   "P" "sp3" }
>> 	{ "py"   "P" "sp3" }
>> 	{ "f"   "F" "sp3" }
>> 	{ "cl"  "Cl" "sp3" }
>> 	{ "br"  "Br" "sp3" }
>> 	{ "i"   "I"  "sp3" }
>> }
>> #
>> #	Load the general force field parameter set.
>> #
>> gaff = loadamberparams gaff.dat
Loading parameters: /Users/darian/anaconda3/envs/md/dat/leap/parm/gaff.dat
Reading title:
AMBER General Force Field for organic molecules (Version 1.81, May 2017)
> 
> loadoff gaff_01/mon.lib
Loading library: ./gaff_01/mon.lib
Loading: mon
> loadAmberParams gaff_01/mon.frcmod
Loading parameters: ./gaff_01/mon.frcmod
Reading force field modification type file (frcmod)
Reading title:
Remark line goes here
> mon = loadpdb gaff_01/mon.pdb
Loading PDB file: ./gaff_01/mon.pdb
-- residue 1: duplicate [ C] atoms (total 14)
-- residue 1: duplicate [ H] atoms (total 16)
-- residue 1: duplicate [ N] atoms (total 2)
-- residue 1: duplicate [ O] atoms (total 3)

/Users/darian/anaconda3/envs/md/bin/teLeap: Warning!
Atom names in each residue should be unique.
     (Same-name atoms are handled by using the first
      occurrence and by ignoring the rest.
      Many instances of duplicate atom names usually come
      from alternate conformations in the PDB file.)

Matching PDB residue names to LEaP variables.

/Users/darian/anaconda3/envs/md/bin/teLeap: Warning!
Unknown residue: MON   number: 0   type: Terminal/last
..relaxing end constraints to try for a dbase match

/Users/darian/anaconda3/envs/md/bin/teLeap: Warning!
  -no luck
Creating new UNIT for residue: MON sequence: 1
Created a new atom named: C within residue: .R<MON 1>
Created a new atom named: O within residue: .R<MON 1>
Created a new atom named: N within residue: .R<MON 1>
Created a new atom named: S within residue: .R<MON 1>
Created a new atom named: H within residue: .R<MON 1>
  total atoms in file: 36
  The file contained 5 atoms not in residue templates
> check mon
Checking 'mon'....
FATAL:  Atom .R<MON 1>.A<C 1> does not have a type.
FATAL:  Atom .R<MON 1>.A<O 2> does not have a type.
FATAL:  Atom .R<MON 1>.A<N 3> does not have a type.
FATAL:  Atom .R<MON 1>.A<S 4> does not have a type.
FATAL:  Atom .R<MON 1>.A<H 5> does not have a type.

/Users/darian/anaconda3/envs/md/bin/teLeap: Warning!
Close contact of 1.084 angstroms between nonbonded atoms C and H
-------  .R<MON 1>.A<C 1> and .R<MON 1>.A<H 5>
Checking parameters for unit 'mon'.
Checking for bond parameters.
Checking for angle parameters.
check:  Errors:  5   Warnings: 1
> # save mol2 using ff dependent atom types in col 6
> savemol2 mon gaff_01/mon.mol2 1
Writing mol2 file: gaff_01/mon.mol2
> quit
	Quit

Exiting LEaP: Errors = 0; Warnings = 4; Notes = 0.
log started: Mon Mar 14 10:04:49 2022

Log file: ./leap.log
>> #
>> # ----- leaprc for loading the general Amber Force field.
>> #       This file is mostly for use with Antechamber
>> #
>> #	load atom type hybridizations
>> #
>> addAtomTypes {
>> 	{ "h1"  "H" "sp3" }
>> 	{ "h2"  "H" "sp3" }
>> 	{ "h3"  "H" "sp3" }
>> 	{ "h4"  "H" "sp3" }
>> 	{ "h5"  "H" "sp3" }
>> 	{ "ha"  "H" "sp3" }
>> 	{ "hc"  "H" "sp3" }
>> 	{ "hn"  "H" "sp3" }
>> 	{ "ho"  "H" "sp3" }
>> 	{ "hp"  "H" "sp3" }
>> 	{ "hs"  "H" "sp3" }
>> 	{ "hw"  "H" "sp3" }
>> 	{ "hx"  "H" "sp3" }
>> 	{ "o"  "O" "sp2" }
>> 	{ "o2"  "O" "sp2" }
>> 	{ "oh"  "O" "sp3" }
>> 	{ "op"  "O" "sp3" }
>> 	{ "oq"  "O" "sp3" }
>> 	{ "os"  "O" "sp3" }
>> 	{ "ow"  "O" "sp3" }
>> 	{ "c"  "C" "sp2" }
>> 	{ "c1"  "C" "sp2" }
>> 	{ "c2"  "C" "sp2" }
>> 	{ "c3"  "C" "sp3" }
>> 	{ "ca"  "C" "sp2" }
>> 	{ "cc"  "C" "sp2" }
>> 	{ "cd"  "C" "sp2" }
>> 	{ "ce"  "C" "sp2" }
>> 	{ "cf"  "C" "sp2" }
>> 	{ "cg"  "C" "sp2" }
>> 	{ "ch"  "C" "sp2" }
>> 	{ "cp"  "C" "sp2" }
>> 	{ "cq"  "C" "sp2" }
>> 	{ "cu"  "C" "sp2" }
>> 	{ "cv"  "C" "sp2" }
>> 	{ "cx"  "C" "sp2" }
>> 	{ "cy"  "C" "sp2" }
>> 	{ "cz"  "C" "sp2" }
>> 	{ "n"   "N" "sp2" }
>> 	{ "n1"  "N" "sp2" }
>> 	{ "n2"  "N" "sp2" }
>> 	{ "n3"  "N" "sp3" }
>> 	{ "n4"  "N" "sp3" }
>> 	{ "na"  "N" "sp2" }
>> 	{ "nb"  "N" "sp2" }
>> 	{ "nc"  "N" "sp2" }
>> 	{ "nd"  "N" "sp2" }
>> 	{ "ne"  "N" "sp2" }
>> 	{ "nf"  "N" "sp2" }
>> 	{ "nh"  "N" "sp2" }
>> 	{ "ni"  "N" "sp2" }
>> 	{ "nj"  "N" "sp2" }
>> 	{ "nk"  "N" "sp3" }
>> 	{ "nl"  "N" "sp3" }
>> 	{ "nm"  "N" "sp2" }
>> 	{ "nn"  "N" "sp2" }
>> 	{ "no"  "N" "sp2" }
>> 	{ "np"  "N" "sp3" }
>> 	{ "nq"  "N" "sp3" }
>> 	{ "s"   "S" "sp2" }
>> 	{ "s2"   "S" "sp2" }
>> 	{ "s3"   "S" "sp3" }
>> 	{ "s4"   "S" "sp3" }
>> 	{ "s6"   "S" "sp3" }
>> 	{ "sh"   "S" "sp3" }
>> 	{ "sp"   "S" "sp3" }
>> 	{ "sq"   "S" "sp3" }
>> 	{ "ss"   "S" "sp3" }
>> 	{ "sx"   "S" "sp3" }
>> 	{ "sy"   "S" "sp3" }
>> 	{ "p2"   "P" "sp2" }
>> 	{ "p3"   "P" "sp3" }
>> 	{ "p4"   "P" "sp3" }
>> 	{ "p5"   "P" "sp3" }
>> 	{ "pb"   "P" "sp3" }
>> 	{ "pc"   "P" "sp3" }
>> 	{ "pd"   "P" "sp3" }
>> 	{ "pe"   "P" "sp3" }
>> 	{ "pf"   "P" "sp3" }
>> 	{ "px"   "P" "sp3" }
>> 	{ "py"   "P" "sp3" }
>> 	{ "f"   "F" "sp3" }
>> 	{ "cl"  "Cl" "sp3" }
>> 	{ "br"  "Br" "sp3" }
>> 	{ "i"   "I"  "sp3" }
>> }
>> #
>> #	Load the general force field parameter set.
>> #
>> gaff = loadamberparams gaff.dat
Loading parameters: /Users/darian/anaconda3/envs/md/dat/leap/parm/gaff.dat
Reading title:
AMBER General Force Field for organic molecules (Version 1.81, May 2017)
> 
> loadoff gaff_01/mon.lib
Loading library: ./gaff_01/mon.lib
Loading: mon
> loadAmberParams gaff_01/mon.frcmod
Loading parameters: ./gaff_01/mon.frcmod
Reading force field modification type file (frcmod)
Reading title:
Remark line goes here
> mon = loadmol2 gaff_00/mon.mol2
Loading Mol2 file: ./gaff_00/mon.mol2
Reading MOLECULE named MON
> check mon
Checking 'mon'....
Checking parameters for unit 'mon'.
Checking for bond parameters.
Checking for angle parameters.
Unit is OK.
> # save mol2 using ff dependent atom types in col 6
> savemol2 mon gaff_01/mon.mol2 1
Writing mol2 file: gaff_01/mon.mol2
> quit
	Quit

Exiting LEaP: Errors = 0; Warnings = 0; Notes = 0.
log started: Mon Mar 14 10:09:40 2022

Log file: ./leap.log
>> #
>> # ----- leaprc for loading the general Amber Force field.
>> #       This file is mostly for use with Antechamber
>> #
>> #	load atom type hybridizations
>> #
>> addAtomTypes {
>> 	{ "h1"  "H" "sp3" }
>> 	{ "h2"  "H" "sp3" }
>> 	{ "h3"  "H" "sp3" }
>> 	{ "h4"  "H" "sp3" }
>> 	{ "h5"  "H" "sp3" }
>> 	{ "ha"  "H" "sp3" }
>> 	{ "hc"  "H" "sp3" }
>> 	{ "hn"  "H" "sp3" }
>> 	{ "ho"  "H" "sp3" }
>> 	{ "hp"  "H" "sp3" }
>> 	{ "hs"  "H" "sp3" }
>> 	{ "hw"  "H" "sp3" }
>> 	{ "hx"  "H" "sp3" }
>> 	{ "o"  "O" "sp2" }
>> 	{ "o2"  "O" "sp2" }
>> 	{ "oh"  "O" "sp3" }
>> 	{ "op"  "O" "sp3" }
>> 	{ "oq"  "O" "sp3" }
>> 	{ "os"  "O" "sp3" }
>> 	{ "ow"  "O" "sp3" }
>> 	{ "c"  "C" "sp2" }
>> 	{ "c1"  "C" "sp2" }
>> 	{ "c2"  "C" "sp2" }
>> 	{ "c3"  "C" "sp3" }
>> 	{ "ca"  "C" "sp2" }
>> 	{ "cc"  "C" "sp2" }
>> 	{ "cd"  "C" "sp2" }
>> 	{ "ce"  "C" "sp2" }
>> 	{ "cf"  "C" "sp2" }
>> 	{ "cg"  "C" "sp2" }
>> 	{ "ch"  "C" "sp2" }
>> 	{ "cp"  "C" "sp2" }
>> 	{ "cq"  "C" "sp2" }
>> 	{ "cu"  "C" "sp2" }
>> 	{ "cv"  "C" "sp2" }
>> 	{ "cx"  "C" "sp2" }
>> 	{ "cy"  "C" "sp2" }
>> 	{ "cz"  "C" "sp2" }
>> 	{ "n"   "N" "sp2" }
>> 	{ "n1"  "N" "sp2" }
>> 	{ "n2"  "N" "sp2" }
>> 	{ "n3"  "N" "sp3" }
>> 	{ "n4"  "N" "sp3" }
>> 	{ "na"  "N" "sp2" }
>> 	{ "nb"  "N" "sp2" }
>> 	{ "nc"  "N" "sp2" }
>> 	{ "nd"  "N" "sp2" }
>> 	{ "ne"  "N" "sp2" }
>> 	{ "nf"  "N" "sp2" }
>> 	{ "nh"  "N" "sp2" }
>> 	{ "ni"  "N" "sp2" }
>> 	{ "nj"  "N" "sp2" }
>> 	{ "nk"  "N" "sp3" }
>> 	{ "nl"  "N" "sp3" }
>> 	{ "nm"  "N" "sp2" }
>> 	{ "nn"  "N" "sp2" }
>> 	{ "no"  "N" "sp2" }
>> 	{ "np"  "N" "sp3" }
>> 	{ "nq"  "N" "sp3" }
>> 	{ "s"   "S" "sp2" }
>> 	{ "s2"   "S" "sp2" }
>> 	{ "s3"   "S" "sp3" }
>> 	{ "s4"   "S" "sp3" }
>> 	{ "s6"   "S" "sp3" }
>> 	{ "sh"   "S" "sp3" }
>> 	{ "sp"   "S" "sp3" }
>> 	{ "sq"   "S" "sp3" }
>> 	{ "ss"   "S" "sp3" }
>> 	{ "sx"   "S" "sp3" }
>> 	{ "sy"   "S" "sp3" }
>> 	{ "p2"   "P" "sp2" }
>> 	{ "p3"   "P" "sp3" }
>> 	{ "p4"   "P" "sp3" }
>> 	{ "p5"   "P" "sp3" }
>> 	{ "pb"   "P" "sp3" }
>> 	{ "pc"   "P" "sp3" }
>> 	{ "pd"   "P" "sp3" }
>> 	{ "pe"   "P" "sp3" }
>> 	{ "pf"   "P" "sp3" }
>> 	{ "px"   "P" "sp3" }
>> 	{ "py"   "P" "sp3" }
>> 	{ "f"   "F" "sp3" }
>> 	{ "cl"  "Cl" "sp3" }
>> 	{ "br"  "Br" "sp3" }
>> 	{ "i"   "I"  "sp3" }
>> }
>> #
>> #	Load the general force field parameter set.
>> #
>> gaff = loadamberparams gaff.dat
Loading parameters: /Users/darian/anaconda3/envs/md/dat/leap/parm/gaff.dat
Reading title:
AMBER General Force Field for organic molecules (Version 1.81, May 2017)
> 
> loadoff gaff_01/mon.lib
Loading library: ./gaff_01/mon.lib
Loading: mon
> loadAmberParams gaff_01/mon.frcmod
Loading parameters: ./gaff_01/mon.frcmod
Reading force field modification type file (frcmod)
Reading title:
Remark line goes here
> monP = loadmol2 gaff_00/mon.mol2
Loading Mol2 file: ./gaff_00/mon.mol2
Reading MOLECULE named MON
> # save mol2 using ff dependent atom types in col 6
> savepdb monP gaff_01/mon.pdb
Writing pdb file: gaff_01/mon.pdb
> monN = loadpdb gaff_01/mon.pdb
Loading PDB file: ./gaff_01/mon.pdb
Matching PDB residue names to LEaP variables.

/Users/darian/anaconda3/envs/md/bin/teLeap: Warning!
Unknown residue: MON   number: 0   type: Terminal/last
..relaxing end constraints to try for a dbase match

/Users/darian/anaconda3/envs/md/bin/teLeap: Warning!
  -no luck
Creating new UNIT for residue: MON sequence: 1
Created a new atom named: C within residue: .R<MON 1>
Created a new atom named: C1 within residue: .R<MON 1>
Created a new atom named: O within residue: .R<MON 1>
Created a new atom named: C2 within residue: .R<MON 1>
Created a new atom named: O1 within residue: .R<MON 1>
Created a new atom named: C3 within residue: .R<MON 1>
Created a new atom named: C4 within residue: .R<MON 1>
Created a new atom named: C5 within residue: .R<MON 1>
Created a new atom named: N within residue: .R<MON 1>
Created a new atom named: C6 within residue: .R<MON 1>
Created a new atom named: S within residue: .R<MON 1>
Created a new atom named: N1 within residue: .R<MON 1>
Created a new atom named: C7 within residue: .R<MON 1>
Created a new atom named: C8 within residue: .R<MON 1>
Created a new atom named: C9 within residue: .R<MON 1>
Created a new atom named: C10 within residue: .R<MON 1>
Created a new atom named: C11 within residue: .R<MON 1>
Created a new atom named: C12 within residue: .R<MON 1>
Created a new atom named: O2 within residue: .R<MON 1>
Created a new atom named: C13 within residue: .R<MON 1>
Created a new atom named: H within residue: .R<MON 1>
Created a new atom named: H1 within residue: .R<MON 1>
Created a new atom named: H2 within residue: .R<MON 1>
Created a new atom named: H3 within residue: .R<MON 1>
Created a new atom named: H4 within residue: .R<MON 1>
Created a new atom named: H5 within residue: .R<MON 1>
Created a new atom named: H6 within residue: .R<MON 1>
Created a new atom named: H7 within residue: .R<MON 1>
Created a new atom named: H8 within residue: .R<MON 1>
Created a new atom named: H9 within residue: .R<MON 1>
Created a new atom named: H10 within residue: .R<MON 1>
Created a new atom named: H11 within residue: .R<MON 1>
Created a new atom named: H12 within residue: .R<MON 1>
Created a new atom named: H13 within residue: .R<MON 1>
Created a new atom named: H14 within residue: .R<MON 1>
Created a new atom named: H15 within residue: .R<MON 1>
  total atoms in file: 36
  The file contained 36 atoms not in residue templates
> # save mol2 using ff dependent atom types in col 6
> savemol2 monN gaff_01/mon.mol2 1
Writing mol2 file: gaff_01/mon.mol2
> quit
	Quit

Exiting LEaP: Errors = 0; Warnings = 2; Notes = 0.
log started: Mon Mar 14 10:17:48 2022

Log file: ./leap.log
>> #
>> # ----- leaprc for loading the general Amber Force field.
>> #       This file is mostly for use with Antechamber
>> #
>> #	load atom type hybridizations
>> #
>> addAtomTypes {
>> 	{ "h1"  "H" "sp3" }
>> 	{ "h2"  "H" "sp3" }
>> 	{ "h3"  "H" "sp3" }
>> 	{ "h4"  "H" "sp3" }
>> 	{ "h5"  "H" "sp3" }
>> 	{ "ha"  "H" "sp3" }
>> 	{ "hc"  "H" "sp3" }
>> 	{ "hn"  "H" "sp3" }
>> 	{ "ho"  "H" "sp3" }
>> 	{ "hp"  "H" "sp3" }
>> 	{ "hs"  "H" "sp3" }
>> 	{ "hw"  "H" "sp3" }
>> 	{ "hx"  "H" "sp3" }
>> 	{ "o"  "O" "sp2" }
>> 	{ "o2"  "O" "sp2" }
>> 	{ "oh"  "O" "sp3" }
>> 	{ "op"  "O" "sp3" }
>> 	{ "oq"  "O" "sp3" }
>> 	{ "os"  "O" "sp3" }
>> 	{ "ow"  "O" "sp3" }
>> 	{ "c"  "C" "sp2" }
>> 	{ "c1"  "C" "sp2" }
>> 	{ "c2"  "C" "sp2" }
>> 	{ "c3"  "C" "sp3" }
>> 	{ "ca"  "C" "sp2" }
>> 	{ "cc"  "C" "sp2" }
>> 	{ "cd"  "C" "sp2" }
>> 	{ "ce"  "C" "sp2" }
>> 	{ "cf"  "C" "sp2" }
>> 	{ "cg"  "C" "sp2" }
>> 	{ "ch"  "C" "sp2" }
>> 	{ "cp"  "C" "sp2" }
>> 	{ "cq"  "C" "sp2" }
>> 	{ "cu"  "C" "sp2" }
>> 	{ "cv"  "C" "sp2" }
>> 	{ "cx"  "C" "sp2" }
>> 	{ "cy"  "C" "sp2" }
>> 	{ "cz"  "C" "sp2" }
>> 	{ "n"   "N" "sp2" }
>> 	{ "n1"  "N" "sp2" }
>> 	{ "n2"  "N" "sp2" }
>> 	{ "n3"  "N" "sp3" }
>> 	{ "n4"  "N" "sp3" }
>> 	{ "na"  "N" "sp2" }
>> 	{ "nb"  "N" "sp2" }
>> 	{ "nc"  "N" "sp2" }
>> 	{ "nd"  "N" "sp2" }
>> 	{ "ne"  "N" "sp2" }
>> 	{ "nf"  "N" "sp2" }
>> 	{ "nh"  "N" "sp2" }
>> 	{ "ni"  "N" "sp2" }
>> 	{ "nj"  "N" "sp2" }
>> 	{ "nk"  "N" "sp3" }
>> 	{ "nl"  "N" "sp3" }
>> 	{ "nm"  "N" "sp2" }
>> 	{ "nn"  "N" "sp2" }
>> 	{ "no"  "N" "sp2" }
>> 	{ "np"  "N" "sp3" }
>> 	{ "nq"  "N" "sp3" }
>> 	{ "s"   "S" "sp2" }
>> 	{ "s2"   "S" "sp2" }
>> 	{ "s3"   "S" "sp3" }
>> 	{ "s4"   "S" "sp3" }
>> 	{ "s6"   "S" "sp3" }
>> 	{ "sh"   "S" "sp3" }
>> 	{ "sp"   "S" "sp3" }
>> 	{ "sq"   "S" "sp3" }
>> 	{ "ss"   "S" "sp3" }
>> 	{ "sx"   "S" "sp3" }
>> 	{ "sy"   "S" "sp3" }
>> 	{ "p2"   "P" "sp2" }
>> 	{ "p3"   "P" "sp3" }
>> 	{ "p4"   "P" "sp3" }
>> 	{ "p5"   "P" "sp3" }
>> 	{ "pb"   "P" "sp3" }
>> 	{ "pc"   "P" "sp3" }
>> 	{ "pd"   "P" "sp3" }
>> 	{ "pe"   "P" "sp3" }
>> 	{ "pf"   "P" "sp3" }
>> 	{ "px"   "P" "sp3" }
>> 	{ "py"   "P" "sp3" }
>> 	{ "f"   "F" "sp3" }
>> 	{ "cl"  "Cl" "sp3" }
>> 	{ "br"  "Br" "sp3" }
>> 	{ "i"   "I"  "sp3" }
>> }
>> #
>> #	Load the general force field parameter set.
>> #
>> gaff = loadamberparams gaff.dat
Loading parameters: /Users/darian/anaconda3/envs/md/dat/leap/parm/gaff.dat
Reading title:
AMBER General Force Field for organic molecules (Version 1.81, May 2017)
> 
> loadoff gaff_01/mon.lib
Loading library: ./gaff_01/mon.lib
Loading: mon
> loadAmberParams gaff_01/mon.frcmod
Loading parameters: ./gaff_01/mon.frcmod
Reading force field modification type file (frcmod)
Reading title:
Remark line goes here
> monP = loadmol2 gaff_00/mon.mol2
Loading Mol2 file: ./gaff_00/mon.mol2
Reading MOLECULE named MON
> # save mol2 using ff dependent atom types in col 6
> savepdb monP gaff_01/mon.pdb
Writing pdb file: gaff_01/mon.pdb
> monN = loadpdb gaff_01/mon.pdb
Loading PDB file: ./gaff_01/mon.pdb
Matching PDB residue names to LEaP variables.

/Users/darian/anaconda3/envs/md/bin/teLeap: Warning!
Unknown residue: MON   number: 0   type: Terminal/last
..relaxing end constraints to try for a dbase match

/Users/darian/anaconda3/envs/md/bin/teLeap: Warning!
  -no luck
Creating new UNIT for residue: MON sequence: 1
Created a new atom named: C within residue: .R<MON 1>
Created a new atom named: C1 within residue: .R<MON 1>
Created a new atom named: O within residue: .R<MON 1>
Created a new atom named: C2 within residue: .R<MON 1>
Created a new atom named: O1 within residue: .R<MON 1>
Created a new atom named: C3 within residue: .R<MON 1>
Created a new atom named: C4 within residue: .R<MON 1>
Created a new atom named: C5 within residue: .R<MON 1>
Created a new atom named: N within residue: .R<MON 1>
Created a new atom named: C6 within residue: .R<MON 1>
Created a new atom named: S within residue: .R<MON 1>
Created a new atom named: N1 within residue: .R<MON 1>
Created a new atom named: C7 within residue: .R<MON 1>
Created a new atom named: C8 within residue: .R<MON 1>
Created a new atom named: C9 within residue: .R<MON 1>
Created a new atom named: C10 within residue: .R<MON 1>
Created a new atom named: C11 within residue: .R<MON 1>
Created a new atom named: C12 within residue: .R<MON 1>
Created a new atom named: O2 within residue: .R<MON 1>
Created a new atom named: C13 within residue: .R<MON 1>
Created a new atom named: H within residue: .R<MON 1>
Created a new atom named: H1 within residue: .R<MON 1>
Created a new atom named: H2 within residue: .R<MON 1>
Created a new atom named: H3 within residue: .R<MON 1>
Created a new atom named: H4 within residue: .R<MON 1>
Created a new atom named: H5 within residue: .R<MON 1>
Created a new atom named: H6 within residue: .R<MON 1>
Created a new atom named: H7 within residue: .R<MON 1>
Created a new atom named: H8 within residue: .R<MON 1>
Created a new atom named: H9 within residue: .R<MON 1>
Created a new atom named: H10 within residue: .R<MON 1>
Created a new atom named: H11 within residue: .R<MON 1>
Created a new atom named: H12 within residue: .R<MON 1>
Created a new atom named: H13 within residue: .R<MON 1>
Created a new atom named: H14 within residue: .R<MON 1>
Created a new atom named: H15 within residue: .R<MON 1>
  total atoms in file: 36
  The file contained 36 atoms not in residue templates
> # save mol2 using ff dependent atom types in col 6
> savemol2 monN gaff_01/mon.mol2 1
Writing mol2 file: gaff_01/mon.mol2
> saveamberparm monN gaff_01/mon.top gaff_01/mon.crd
Checking Unit.
FATAL:  Atom .R<MON 1>.A<C 1> does not have a type.
FATAL:  Atom .R<MON 1>.A<C1 2> does not have a type.
FATAL:  Atom .R<MON 1>.A<O 3> does not have a type.
FATAL:  Atom .R<MON 1>.A<C2 4> does not have a type.
FATAL:  Atom .R<MON 1>.A<O1 5> does not have a type.
FATAL:  Atom .R<MON 1>.A<C3 6> does not have a type.
FATAL:  Atom .R<MON 1>.A<C4 7> does not have a type.
FATAL:  Atom .R<MON 1>.A<C5 8> does not have a type.
FATAL:  Atom .R<MON 1>.A<N 9> does not have a type.
FATAL:  Atom .R<MON 1>.A<C6 10> does not have a type.
FATAL:  Atom .R<MON 1>.A<S 11> does not have a type.
FATAL:  Atom .R<MON 1>.A<N1 12> does not have a type.
FATAL:  Atom .R<MON 1>.A<C7 13> does not have a type.
FATAL:  Atom .R<MON 1>.A<C8 14> does not have a type.
FATAL:  Atom .R<MON 1>.A<C9 15> does not have a type.
FATAL:  Atom .R<MON 1>.A<C10 16> does not have a type.
FATAL:  Atom .R<MON 1>.A<C11 17> does not have a type.
FATAL:  Atom .R<MON 1>.A<C12 18> does not have a type.
FATAL:  Atom .R<MON 1>.A<O2 19> does not have a type.
FATAL:  Atom .R<MON 1>.A<C13 20> does not have a type.
FATAL:  Atom .R<MON 1>.A<H 21> does not have a type.
FATAL:  Atom .R<MON 1>.A<H1 22> does not have a type.
FATAL:  Atom .R<MON 1>.A<H2 23> does not have a type.
FATAL:  Atom .R<MON 1>.A<H3 24> does not have a type.
FATAL:  Atom .R<MON 1>.A<H4 25> does not have a type.
FATAL:  Atom .R<MON 1>.A<H5 26> does not have a type.
FATAL:  Atom .R<MON 1>.A<H6 27> does not have a type.
FATAL:  Atom .R<MON 1>.A<H7 28> does not have a type.
FATAL:  Atom .R<MON 1>.A<H8 29> does not have a type.
FATAL:  Atom .R<MON 1>.A<H9 30> does not have a type.
FATAL:  Atom .R<MON 1>.A<H10 31> does not have a type.
FATAL:  Atom .R<MON 1>.A<H11 32> does not have a type.
FATAL:  Atom .R<MON 1>.A<H12 33> does not have a type.
FATAL:  Atom .R<MON 1>.A<H13 34> does not have a type.
FATAL:  Atom .R<MON 1>.A<H14 35> does not have a type.
FATAL:  Atom .R<MON 1>.A<H15 36> does not have a type.

/Users/darian/anaconda3/envs/md/bin/teLeap: Fatal Error!
Failed to generate parameters

Exiting LEaP: Errors = 1; Warnings = 2; Notes = 0.
log started: Mon Mar 14 10:23:08 2022

Log file: ./leap.log
>> #
>> # ----- leaprc for loading the general Amber Force field.
>> #       This file is mostly for use with Antechamber
>> #
>> #	load atom type hybridizations
>> #
>> addAtomTypes {
>> 	{ "h1"  "H" "sp3" }
>> 	{ "h2"  "H" "sp3" }
>> 	{ "h3"  "H" "sp3" }
>> 	{ "h4"  "H" "sp3" }
>> 	{ "h5"  "H" "sp3" }
>> 	{ "ha"  "H" "sp3" }
>> 	{ "hc"  "H" "sp3" }
>> 	{ "hn"  "H" "sp3" }
>> 	{ "ho"  "H" "sp3" }
>> 	{ "hp"  "H" "sp3" }
>> 	{ "hs"  "H" "sp3" }
>> 	{ "hw"  "H" "sp3" }
>> 	{ "hx"  "H" "sp3" }
>> 	{ "o"  "O" "sp2" }
>> 	{ "o2"  "O" "sp2" }
>> 	{ "oh"  "O" "sp3" }
>> 	{ "op"  "O" "sp3" }
>> 	{ "oq"  "O" "sp3" }
>> 	{ "os"  "O" "sp3" }
>> 	{ "ow"  "O" "sp3" }
>> 	{ "c"  "C" "sp2" }
>> 	{ "c1"  "C" "sp2" }
>> 	{ "c2"  "C" "sp2" }
>> 	{ "c3"  "C" "sp3" }
>> 	{ "ca"  "C" "sp2" }
>> 	{ "cc"  "C" "sp2" }
>> 	{ "cd"  "C" "sp2" }
>> 	{ "ce"  "C" "sp2" }
>> 	{ "cf"  "C" "sp2" }
>> 	{ "cg"  "C" "sp2" }
>> 	{ "ch"  "C" "sp2" }
>> 	{ "cp"  "C" "sp2" }
>> 	{ "cq"  "C" "sp2" }
>> 	{ "cu"  "C" "sp2" }
>> 	{ "cv"  "C" "sp2" }
>> 	{ "cx"  "C" "sp2" }
>> 	{ "cy"  "C" "sp2" }
>> 	{ "cz"  "C" "sp2" }
>> 	{ "n"   "N" "sp2" }
>> 	{ "n1"  "N" "sp2" }
>> 	{ "n2"  "N" "sp2" }
>> 	{ "n3"  "N" "sp3" }
>> 	{ "n4"  "N" "sp3" }
>> 	{ "na"  "N" "sp2" }
>> 	{ "nb"  "N" "sp2" }
>> 	{ "nc"  "N" "sp2" }
>> 	{ "nd"  "N" "sp2" }
>> 	{ "ne"  "N" "sp2" }
>> 	{ "nf"  "N" "sp2" }
>> 	{ "nh"  "N" "sp2" }
>> 	{ "ni"  "N" "sp2" }
>> 	{ "nj"  "N" "sp2" }
>> 	{ "nk"  "N" "sp3" }
>> 	{ "nl"  "N" "sp3" }
>> 	{ "nm"  "N" "sp2" }
>> 	{ "nn"  "N" "sp2" }
>> 	{ "no"  "N" "sp2" }
>> 	{ "np"  "N" "sp3" }
>> 	{ "nq"  "N" "sp3" }
>> 	{ "s"   "S" "sp2" }
>> 	{ "s2"   "S" "sp2" }
>> 	{ "s3"   "S" "sp3" }
>> 	{ "s4"   "S" "sp3" }
>> 	{ "s6"   "S" "sp3" }
>> 	{ "sh"   "S" "sp3" }
>> 	{ "sp"   "S" "sp3" }
>> 	{ "sq"   "S" "sp3" }
>> 	{ "ss"   "S" "sp3" }
>> 	{ "sx"   "S" "sp3" }
>> 	{ "sy"   "S" "sp3" }
>> 	{ "p2"   "P" "sp2" }
>> 	{ "p3"   "P" "sp3" }
>> 	{ "p4"   "P" "sp3" }
>> 	{ "p5"   "P" "sp3" }
>> 	{ "pb"   "P" "sp3" }
>> 	{ "pc"   "P" "sp3" }
>> 	{ "pd"   "P" "sp3" }
>> 	{ "pe"   "P" "sp3" }
>> 	{ "pf"   "P" "sp3" }
>> 	{ "px"   "P" "sp3" }
>> 	{ "py"   "P" "sp3" }
>> 	{ "f"   "F" "sp3" }
>> 	{ "cl"  "Cl" "sp3" }
>> 	{ "br"  "Br" "sp3" }
>> 	{ "i"   "I"  "sp3" }
>> }
>> #
>> #	Load the general force field parameter set.
>> #
>> gaff = loadamberparams gaff.dat
Loading parameters: /Users/darian/anaconda3/envs/md/dat/leap/parm/gaff.dat
Reading title:
AMBER General Force Field for organic molecules (Version 1.81, May 2017)
> 
> loadoff gaff_01/mon.lib
Loading library: ./gaff_01/mon.lib
Loading: MON
> loadAmberParams gaff_01/mon.frcmod
Loading parameters: ./gaff_01/mon.frcmod
Reading force field modification type file (frcmod)
Reading title:
Remark line goes here
> mon = loadmol2 gaff_00/mon.mol2
Loading Mol2 file: ./gaff_00/mon.mol2
Reading MOLECULE named MON
> savepdb mon gaff_01/mon.pdb
Writing pdb file: gaff_01/mon.pdb
> # save mol2 using ff dependent atom types in col 6
> savemol2 mon gaff_01/mon.mol2 1
Writing mol2 file: gaff_01/mon.mol2
> quit
	Quit

Exiting LEaP: Errors = 0; Warnings = 0; Notes = 0.
log started: Mon Mar 14 10:24:49 2022

Log file: ./leap.log
>> #
>> # ----- leaprc for loading the general Amber Force field.
>> #       This file is mostly for use with Antechamber
>> #
>> #	load atom type hybridizations
>> #
>> addAtomTypes {
>> 	{ "h1"  "H" "sp3" }
>> 	{ "h2"  "H" "sp3" }
>> 	{ "h3"  "H" "sp3" }
>> 	{ "h4"  "H" "sp3" }
>> 	{ "h5"  "H" "sp3" }
>> 	{ "ha"  "H" "sp3" }
>> 	{ "hc"  "H" "sp3" }
>> 	{ "hn"  "H" "sp3" }
>> 	{ "ho"  "H" "sp3" }
>> 	{ "hp"  "H" "sp3" }
>> 	{ "hs"  "H" "sp3" }
>> 	{ "hw"  "H" "sp3" }
>> 	{ "hx"  "H" "sp3" }
>> 	{ "o"  "O" "sp2" }
>> 	{ "o2"  "O" "sp2" }
>> 	{ "oh"  "O" "sp3" }
>> 	{ "op"  "O" "sp3" }
>> 	{ "oq"  "O" "sp3" }
>> 	{ "os"  "O" "sp3" }
>> 	{ "ow"  "O" "sp3" }
>> 	{ "c"  "C" "sp2" }
>> 	{ "c1"  "C" "sp2" }
>> 	{ "c2"  "C" "sp2" }
>> 	{ "c3"  "C" "sp3" }
>> 	{ "ca"  "C" "sp2" }
>> 	{ "cc"  "C" "sp2" }
>> 	{ "cd"  "C" "sp2" }
>> 	{ "ce"  "C" "sp2" }
>> 	{ "cf"  "C" "sp2" }
>> 	{ "cg"  "C" "sp2" }
>> 	{ "ch"  "C" "sp2" }
>> 	{ "cp"  "C" "sp2" }
>> 	{ "cq"  "C" "sp2" }
>> 	{ "cu"  "C" "sp2" }
>> 	{ "cv"  "C" "sp2" }
>> 	{ "cx"  "C" "sp2" }
>> 	{ "cy"  "C" "sp2" }
>> 	{ "cz"  "C" "sp2" }
>> 	{ "n"   "N" "sp2" }
>> 	{ "n1"  "N" "sp2" }
>> 	{ "n2"  "N" "sp2" }
>> 	{ "n3"  "N" "sp3" }
>> 	{ "n4"  "N" "sp3" }
>> 	{ "na"  "N" "sp2" }
>> 	{ "nb"  "N" "sp2" }
>> 	{ "nc"  "N" "sp2" }
>> 	{ "nd"  "N" "sp2" }
>> 	{ "ne"  "N" "sp2" }
>> 	{ "nf"  "N" "sp2" }
>> 	{ "nh"  "N" "sp2" }
>> 	{ "ni"  "N" "sp2" }
>> 	{ "nj"  "N" "sp2" }
>> 	{ "nk"  "N" "sp3" }
>> 	{ "nl"  "N" "sp3" }
>> 	{ "nm"  "N" "sp2" }
>> 	{ "nn"  "N" "sp2" }
>> 	{ "no"  "N" "sp2" }
>> 	{ "np"  "N" "sp3" }
>> 	{ "nq"  "N" "sp3" }
>> 	{ "s"   "S" "sp2" }
>> 	{ "s2"   "S" "sp2" }
>> 	{ "s3"   "S" "sp3" }
>> 	{ "s4"   "S" "sp3" }
>> 	{ "s6"   "S" "sp3" }
>> 	{ "sh"   "S" "sp3" }
>> 	{ "sp"   "S" "sp3" }
>> 	{ "sq"   "S" "sp3" }
>> 	{ "ss"   "S" "sp3" }
>> 	{ "sx"   "S" "sp3" }
>> 	{ "sy"   "S" "sp3" }
>> 	{ "p2"   "P" "sp2" }
>> 	{ "p3"   "P" "sp3" }
>> 	{ "p4"   "P" "sp3" }
>> 	{ "p5"   "P" "sp3" }
>> 	{ "pb"   "P" "sp3" }
>> 	{ "pc"   "P" "sp3" }
>> 	{ "pd"   "P" "sp3" }
>> 	{ "pe"   "P" "sp3" }
>> 	{ "pf"   "P" "sp3" }
>> 	{ "px"   "P" "sp3" }
>> 	{ "py"   "P" "sp3" }
>> 	{ "f"   "F" "sp3" }
>> 	{ "cl"  "Cl" "sp3" }
>> 	{ "br"  "Br" "sp3" }
>> 	{ "i"   "I"  "sp3" }
>> }
>> #
>> #	Load the general force field parameter set.
>> #
>> gaff = loadamberparams gaff.dat
Loading parameters: /Users/darian/anaconda3/envs/md/dat/leap/parm/gaff.dat
Reading title:
AMBER General Force Field for organic molecules (Version 1.81, May 2017)
> 
> loadoff gaff_01/mon.lib
Loading library: ./gaff_01/mon.lib
Loading: MON
> loadAmberParams gaff_01/mon.frcmod
Loading parameters: ./gaff_01/mon.frcmod
Reading force field modification type file (frcmod)
Reading title:
Remark line goes here
> monP = loadmol2 gaff_00/mon.mol2
Loading Mol2 file: ./gaff_00/mon.mol2
Reading MOLECULE named MON
> savepdb monP gaff_01/mon.pdb
Writing pdb file: gaff_01/mon.pdb
> monN = loadpdb gaff_01/mon.pdb
Loading PDB file: ./gaff_01/mon.pdb
Matching PDB residue names to LEaP variables.
  total atoms in file: 36
> # save mol2 using ff dependent atom types in col 6
> savemol2 monN gaff_01/mon.mol2 1
Writing mol2 file: gaff_01/mon.mol2
> quit
	Quit

Exiting LEaP: Errors = 0; Warnings = 0; Notes = 0.
